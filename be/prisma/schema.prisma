generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email          String     @id @db.VarChar(100)
  username       String?    @db.VarChar(100)
  full_name      String?    @db.VarChar(100)
  password       String     @db.VarChar(100)
  phone_number   Int?       
  photo_profile  String?    @db.VarChar(100)
  street         String?    @db.VarChar(100)
  city           String?    @db.VarChar(100)
  province       String?    @db.VarChar(100)
  country        String?    @db.VarChar(100)
  postal_code    String?    @db.VarChar(100)
  token          String?    @db.VarChar(100)
  shopping_carts Shopping_cart[]
  transactions   Transaction[]

  @@map("users")
}

model Product {
  id      Int @id @default(autoincrement())
  product_name String @db.VarChar(100)
  description String @db.VarChar(100)
  stock Int
  price Int
  color String[]
  size String[]
  image String[]
  rating Int
  shopping_carts Shopping_cart[]

  category Category @relation(fields: [category_id], references: [id])
  category_id Int

  transaction_items Transaction_item[]

  @@map("products")
}

model Category {
  id Int @id @default(autoincrement())
  category_name String @db.VarChar(100)
  products Product[]

  @@map("categories")
}

model Shopping_cart {
  id Int @id @default(autoincrement())
  total Int
  user_email String @db.VarChar(100)
  products Product[]

  user User @relation(fields: [user_email], references: [email])

  @@map("shopping_carts")
}

model Transaction {
  id Int @id @default(autoincrement())
  total Int
  status String @db.VarChar(100)
  snap_token String? @db.VarChar(100)
  snap_redirect_url String? @db.VarChar(100)
  payment_method String? @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)

  user_email       String     @db.VarChar(100)
  user             User       @relation(fields: [user_email], references: [email])

  transaction_items Transaction_item[]

  @@map("transactions")
}

model Transaction_item {
  id Int @id @default(autoincrement())
  product_name String @db.VarChar(100)
  price Int
  quantity Int
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)

  product       Product    @relation(fields: [product_id], references: [id])
  product_id    Int

  transaction   Transaction @relation(fields: [transaction_id], references: [id])
  transaction_id Int

   @@map("transaction_items")
}